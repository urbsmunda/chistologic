name: Terraform Deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write   # OIDC for YC
  contents: read

# ----------  Global ENV  ----------
# Variables prefixed TF_VAR_ are passed to Terraform as input variables
env:
  TF_VERSION: "1.5.7"
  # Backend
  TF_BUCKET: ${{ vars.TF_BUCKET }}
  # YC identifiers
  YC_CLOUD_ID:  ${{ vars.YANDEX_CLOUD_ID }}
  YC_FOLDER_ID: ${{ vars.YANDEX_FOLDER_ID }}
  # — Terraform input mappings —
  TF_VAR_cloud_id:  ${{ vars.YANDEX_CLOUD_ID }}
  TF_VAR_folder_id: ${{ vars.YANDEX_FOLDER_ID }}
  TF_VAR_object_storage_access_key:   ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_object_storage_secret_key:   ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_telegram_bot_token_kms_secret_id: ${{ vars.TELEGRAM_BOT_TOKEN_KMS_SECRET_ID }}

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # ---- Pull YC IAM‑token helper ----
      - name: Pull ghcr.io/yc-actions/yc-iam-token-fed:1.0.0
        uses: docker://ghcr.io/yc-actions/yc-iam-token-fed:1.0.0
        # OIDC inputs
        id: yc-auth
        with:
          yc-sa-id:        ${{ vars.YC_SA_ID }}
          yc-federation-id: ${{ vars.YC_FEDERATION_ID }}

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # --- Terraform commands ---
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=$TF_BUCKET" \
            -backend-config="key=${{ github.ref_name }}.tfstate" \
            -backend-config="endpoint=https://storage.yandexcloud.net" \
            -backend-config="region=ru-central1" \
            -backend-config="skip_region_validation=true" \
            -backend-config="skip_credentials_validation=true"
        env:
          YC_TOKEN: ${{ steps.yc-auth.outputs.token }}

      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          YC_TOKEN: ${{ steps.yc-auth.outputs.token }}

      - name: Terraform Apply
        if: success() && (github.ref == 'refs/heads/main') && (github.event_name == 'push')
        run: terraform apply -input=false -auto-approve
        env:
          YC_TOKEN: ${{ steps.yc-auth.outputs.token }}
