name: Terraform Deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write   # выдаём OIDC‑токен для YC
  contents: read

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

env:
  TF_VERSION: "1.5.7"
  TF_BUCKET:  ${{ vars.TF_BUCKET }}        # имя бакета из Repository Variables
  YC_CLOUD_ID:  ${{ vars.YANDEX_CLOUD_ID }}
  YC_FOLDER_ID: ${{ vars.YANDEX_FOLDER_ID }}

jobs:
  terraform:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    # Получаем краткоживущий IAM‑токен без JSON‑ключей
    - name: YC OIDC auth
      id: yc-auth
      uses: docker://ghcr.io/yc-actions/yc-iam-token-fed:1.0.0
      with:
        yc-sa-id:        ${{ vars.YC_SA_ID }}
        yc-federation-id: ${{ vars.YC_FEDERATION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      env:
        YC_TOKEN:              ${{ steps.yc-auth.outputs.token }}
        AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        terraform -chdir=terraform init \
          -backend-config="bucket=${TF_BUCKET}" \
          -backend-config="key=${{ github.ref_name }}.tfstate" \
          -backend-config="endpoint=https://storage.yandexcloud.net" \
          -backend-config="region=ru-central1" \
          -backend-config="skip_region_validation=true" \
          -backend-config="skip_credentials_validation=true"

    - name: Terraform Plan
      env:
        YC_TOKEN: ${{ steps.yc-auth.outputs.token }}
      run: terraform -chdir=terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        YC_TOKEN: ${{ steps.yc-auth.outputs.token }}
      run: terraform -chdir=terraform apply -auto-approve -input=false
