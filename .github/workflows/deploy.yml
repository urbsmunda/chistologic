name: Terraform Deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

permissions:
  id-token: write          # OIDC-токен для YC
  contents: read

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

env:
  TF_VERSION: 1.5.7
  YC_CLOUD_ID:  ${{ secrets.YANDEX_CLOUD_ID }}
  YC_FOLDER_ID: ${{ secrets.YANDEX_FOLDER_ID }}
  TF_BUCKET:    chistologic-tfstate
  TF_STATE_KEY: ${{ github.ref == 'refs/heads/main' && 'prod/terraform.tfstate' || 'pr/terraform-${{ github.head_ref }}.tfstate' }}

jobs:
# ──────────────────────────────────────────────────────────────────────────────
  fmt-validate:
    name: Fmt & Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: YC-OIDC Auth
        uses: yandex-cloud/actions/yc-auth@v0
        with:
          oidc_token: ${{ secrets.GITHUB_TOKEN }}
          cloud_id:   ${{ env.YC_CLOUD_ID }}
          folder_id:  ${{ env.YC_FOLDER_ID }}

      - name: Init (no backend)
        run: terraform init -backend=false

      - run: terraform fmt -check
      - run: terraform validate

# ──────────────────────────────────────────────────────────────────────────────
  plan:
    name: Plan
    needs: fmt-validate
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform
    outputs:
      has-changes: ${{ steps.plan.outputs.has-changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: YC-OIDC Auth
        uses: yandex-cloud/actions/yc-auth@v0
        with:
          oidc_token: ${{ secrets.GITHUB_TOKEN }}
          cloud_id:   ${{ env.YC_CLOUD_ID }}
          folder_id:  ${{ env.YC_FOLDER_ID }}

      - name: Terraform Init (remote backend)
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${TF_BUCKET}" \
            -backend-config="key=${TF_STATE_KEY}" \
            -backend-config="endpoint=storage.yandexcloud.net" \
            -backend-config="region=ru-central1" \
            -backend-config="skip_region_validation=true" \
            -backend-config="skip_credentials_validation=true"

      - id: plan
        name: Terraform Plan
        run: |
          terraform plan -detailed-exitcode \
            -out=tfplan.bin \
            -var cloud_id=$YC_CLOUD_ID \
            -var folder_id=$YC_FOLDER_ID || true
          echo "has-changes=$([ $? -eq 2 ] && echo true || echo false)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/tfplan.bin
          retention-days: 7

# ──────────────────────────────────────────────────────────────────────────────
  apply:
    name: Apply (prod only)
    needs: plan
    if: needs.plan.outputs.has-changes == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: YC-OIDC Auth
        uses: yandex-cloud/actions/yc-auth@v0
        with:
          oidc_token: ${{ secrets.GITHUB_TOKEN }}
          cloud_id:   ${{ env.YC_CLOUD_ID }}
          folder_id:  ${{ env.YC_FOLDER_ID }}

      - uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.bin
